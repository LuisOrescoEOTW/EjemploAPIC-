// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Planos.Models;

namespace Planos.Migrations
{
    [DbContext(typeof(PlanosContext))]
    [Migration("20221216112929_PlanosDeCanios")]
    partial class PlanosDeCanios
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Planos.Models.DobEstadoPlano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DobEstadoPlano");
                });

            modelBuilder.Entity("Planos.Models.DobImpresionesPlanos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaImpresion")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlanoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioBajaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlanoId");

                    b.HasIndex("UsuarioBajaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("DobImpresionesPlanos");
                });

            modelBuilder.Entity("Planos.Models.DobPlano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCambioEstado")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SemielaboradoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioBajaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("SemielaboradoId");

                    b.HasIndex("UsuarioBajaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("DobPlano");
                });

            modelBuilder.Entity("Planos.Models.DobSemi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DobSemi");
                });

            modelBuilder.Entity("Planos.Models.DobUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Puesto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DobUsuario");
                });

            modelBuilder.Entity("Planos.Models.DobImpresionesPlanos", b =>
                {
                    b.HasOne("Planos.Models.DobPlano", "Plano")
                        .WithMany("ImpresionesPlanos")
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Planos.Models.DobUsuario", "UsuarioBaja")
                        .WithMany()
                        .HasForeignKey("UsuarioBajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Planos.Models.DobUsuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plano");

                    b.Navigation("Usuario");

                    b.Navigation("UsuarioBaja");
                });

            modelBuilder.Entity("Planos.Models.DobPlano", b =>
                {
                    b.HasOne("Planos.Models.DobEstadoPlano", "Estado")
                        .WithMany("Plano")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Planos.Models.DobSemi", "Semielaborado")
                        .WithMany("Plano")
                        .HasForeignKey("SemielaboradoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Planos.Models.DobUsuario", "UsuarioBaja")
                        .WithMany()
                        .HasForeignKey("UsuarioBajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Planos.Models.DobUsuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Semielaborado");

                    b.Navigation("Usuario");

                    b.Navigation("UsuarioBaja");
                });

            modelBuilder.Entity("Planos.Models.DobEstadoPlano", b =>
                {
                    b.Navigation("Plano");
                });

            modelBuilder.Entity("Planos.Models.DobPlano", b =>
                {
                    b.Navigation("ImpresionesPlanos");
                });

            modelBuilder.Entity("Planos.Models.DobSemi", b =>
                {
                    b.Navigation("Plano");
                });
#pragma warning restore 612, 618
        }
    }
}
